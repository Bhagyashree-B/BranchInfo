{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/book-create/book-create.component.css","webpack:///./src/app/book-create/book-create.component.html","webpack:///./src/app/book-create/book-create.component.ts","webpack:///./src/app/book/book.component.css","webpack:///./src/app/book/book.component.html","webpack:///./src/app/book/book.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\nconst apiUrl = \"/api\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  };\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  getBooks(): Observable<any> {\n    return this.http.get(apiUrl, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  getBook(id: string): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.get(url, httpOptions).pipe(\n      map(this.extractData),\n      catchError(this.handleError));\n  }\n\n  postBook(data): Observable<any> {\n    console.log(data)\n    return this.http.post(apiUrl, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  updateBook(id: string, data): Observable<any> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.put(url, data, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  deleteBook(id: string): Observable<{}> {\n    const url = `${apiUrl}/${id}`;\n    return this.http.delete(url, httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n}\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BookComponent } from './book/book.component';\nimport { BookCreateComponent } from './book-create/book-create.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {\n  MatInputModule,\n  MatPaginatorModule,\n  MatProgressSpinnerModule,\n  MatSortModule,\n  MatTableModule,\n  MatIconModule,\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule } from \"@angular/material\";\n\nconst appRoutes: Routes = [\n  {\n    path: 'shakha-mahiti',\n    component: BookComponent,\n    data: { title: 'Book List' }\n  },\n   {\n    path: 'add-shakha-mahiti',\n    component: BookCreateComponent,\n    data: { title: 'Create Book' }\n  },\n  { \n    path: '',\n    component: BookCreateComponent,\n    data: { title: 'Create Book' }\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookComponent,\n    BookCreateComponent    \n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.example-full-width:nth-last-child() {\\n  margin-bottom: 10px;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\\n.form{\\n  padding: 10px;\\n  background-color: #ffc299;\\n}\\n\"","module.exports = \"<!-- <div class=\\\"button-row\\\">\\n  <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/books']\\\"><mat-icon>list</mat-icon></a>\\n</div> -->\\n<form [formGroup]=\\\"bookForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onFormSubmit(bookForm.value)\\\">\\n  <h3>शिवसेना शाखा माहिती </h3>\\n  <!-- TODO : Remove this from DB as well\\n -->\\n  <!-- <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"शाखा क़मांक\\\" formControlName=\\\"shakhaKramank\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('shakhaKramank').valid && bookForm.get('shakhaKramank').touched\\\">कृपया हे भरा</span>\\n    </mat-error>\\n  </mat-form-field> -->\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"शाखा गाव\\\" formControlName=\\\"shakhaGaw\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('shakhaGaw').valid && bookForm.get('shakhaGaw').touched\\\">कृपया हे भरा</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"शाखा प्रमुख नाव\\\" formControlName=\\\"shakhaPramukhNaw\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('shakhaPramukhNaw').valid && bookForm.get('shakhaPramukhNaw').touched\\\">कृपया हे भरा</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"शाखा प्रमुख मोबाईल क़मांक\\\" formControlName=\\\"shakhaPramukhMobile\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('shakhaPramukhMobile').valid && bookForm.get('shakhaPramukhMobile').touched\\\">कृपया हे भरा</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\" >\\n    <input matInput placeholder=\\\"शाखा उप प्रमुख नाव\\\" formControlName=\\\"shakhaUpPramukhNaw\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('shakhaUpPramukhNaw').valid && bookForm.get('shakhaUpPramukhNaw').touched\\\">कृपया हे भरा</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"शाखा उप प्रमुख मोबाईल क़मांक\\\" formControlName=\\\"shakhaUpPramukhMobile\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!bookForm.get('shakhaUpPramukhMobile').valid && bookForm.get('shakhaUpPramukhMobile').touched\\\">कृपया हे भरा</span>\\n    </mat-error>\\n  </mat-form-field>\\n\\n  <div formArrayName=\\\"boothDetails\\\">\\n      <div *ngFor=\\\"let item of boothDetails.controls; let pointIndex=index\\\" [formGroupName]=\\\"pointIndex\\\" >\\n      <h3>बूथ प्रमुख {{pointIndex+1}}: </h3>\\n      <div >\\n          <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"नाव\\\" formControlName=\\\"boothName\\\">\\n                     <!-- [errorStateMatcher]=\\\"matcher\\\"> -->\\n              <!-- <mat-error>\\n                <span *ngIf=\\\"!bookForm.get('boothDetails.boothName').valid && bookForm.get('boothDetails.boothName').touched\\\">कृपया हे भरा</span>\\n              </mat-error> -->\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"मोबाईल क़मांक\\\" formControlName=\\\"boothMoNumber\\\">\\n                       <!-- [errorStateMatcher]=\\\"matcher\\\" -->\\n                <!-- <mat-error>\\n                  <span *ngIf=\\\"!bookForm.get('boothMoNumber').valid && bookForm.get('boothMoNumber').touched\\\">कृपया हे भरा</span>\\n                </mat-error> -->\\n              </mat-form-field>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                  <input matInput placeholder=\\\"बूथ क़मांक: \\\" formControlName=\\\"boothNumber\\\">\\n                         <!-- [errorStateMatcher]=\\\"matcher\\\" -->\\n                  <!-- <mat-error>\\n                    <span *ngIf=\\\"!bookForm.get('boothNumber').valid && bookForm.get('boothNumber').touched\\\">कृपया हे भरा</span>\\n                  </mat-error> -->\\n                </mat-form-field>    \\n                <mat-card-actions>\\n                  <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteCompany(i)\\\"><mat-icon>delete</mat-icon></a>\\n                </mat-card-actions> \\n      </div>\\n    </div>\\n  </div> \\n  <mat-card-actions>\\n    <a mat-raised-button color=\\\"primary\\\" (click)=\\\"addNewCompany()\\\"><mat-icon>add</mat-icon></a>\\n  </mat-card-actions> \\n\\n  <div formArrayName=\\\"sadasyaDetails\\\">\\n      <div *ngFor=\\\"let item of sadasyaDetails.controls; let sadasyaIndex=index\\\" [formGroupName]=\\\"sadasyaIndex\\\" >\\n        <h3>सदस्य {{sadasyaIndex+1}}: </h3>\\n        <div>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput placeholder=\\\"नाव\\\" formControlName=\\\"sadasyaName\\\">\\n                       <!-- [errorStateMatcher]=\\\"matcher\\\">\\n                <mat-error>\\n                  <span *ngIf=\\\"!bookForm.get('sadasyaName').valid && bookForm.get('sadasyaName').touched\\\">कृपया हे भरा</span>\\n                </mat-error> -->\\n              </mat-form-field>\\n              <mat-form-field class=\\\"example-full-width\\\">\\n                  <input matInput placeholder=\\\"मोबाईल क़मांक\\\" formControlName=\\\"sadasyaMoNumber\\\">\\n                         <!-- [errorStateMatcher]=\\\"matcher\\\">\\n                  <mat-error>\\n                    <span *ngIf=\\\"!bookForm.get('sadasyaMoNumber').valid && bookForm.get('sadasyaMoNumber').touched\\\">कृपया हे भरा</span>\\n                  </mat-error> -->\\n                </mat-form-field>    \\n                <mat-card-actions>\\n                  <a mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteSadasya(i)\\\"><mat-icon>delete</mat-icon></a>\\n                </mat-card-actions>\\n        </div>\\n      </div>\\n    </div> \\n    <mat-card-actions>\\n      <a mat-raised-button color=\\\"primary\\\" (click)=\\\"addNewSadasya()\\\"><mat-icon>add</mat-icon></a>\\n    </mat-card-actions>  \\n\\n<div class=\\\"form-group\\\">\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!bookForm.valid\\\" mat-raised-button color=\\\"primary\\\"><mat-icon>save</mat-icon></button>\\n  </div>\\n  </div>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { FormControl, FormGroupDirective, FormBuilder,FormArray, FormGroup, NgForm, Validators } from '@angular/forms';\n// import {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n// import {Inject} from '@angular/core';\n\n@Component({\n  selector: 'app-book-create',\n  templateUrl: './book-create.component.html',\n  styleUrls: ['./book-create.component.css']\n})\nexport class BookCreateComponent implements OnInit {\n\n  bookForm: FormGroup;\n  shakhaKramank:string='';\n  shakhaGaw:string='';\n  shakhaPramukhMobile:string='';\n  shakhaPramukhNaw:string='';\n  shakhaUpPramukhNaw:string='';\n  shakhaUpPramukhMobile:string='';\n  boothName:string='';\n  boothMoNumber:string='';\n  boothNumber:string='';\n  sadasyaName:string='';\n  sadasyaMoNumber:string='';\n  \n  constructor(private router: Router, private api: ApiService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.bookForm = this.formBuilder.group({\n      // 'shakhaKramank' : [null, Validators.required],\n      'shakhaGaw' : [null, Validators.required],      \n      'shakhaPramukhNaw' : [null, Validators.required],\n      'shakhaPramukhMobile' : [null, Validators.required],\n      'shakhaUpPramukhNaw':[null, Validators.required],\n      'shakhaUpPramukhMobile':[null, Validators.required],\n      'boothDetails': this.formBuilder.array([\n        this.formBuilder.group({\n        'boothName' : [null, Validators.required],\n        'boothMoNumber':[null, Validators.required],\n        'boothNumber':[null, Validators.required]\n      })]),\n      'sadasyaDetails' : this.formBuilder.array([\n        this.formBuilder.group({\n        'sadasyaName' : [null, Validators.required],\n        'sadasyaMoNumber' : [null, Validators.required]\n      })])\n    });\n  }\n\n/////////////////////////////////\n\n  get boothDetails() {\n    return this.bookForm.get('boothDetails') as FormArray;\n  }\n\n  addNewCompany() {\n    this.boothDetails.push(this.formBuilder.group({ boothName: '',boothMoNumber : '',boothNumber : ''}));\n  }\n\n  deleteCompany(index) {\n    this.boothDetails.removeAt(index);\n  }\n/////////////////\n\nget sadasyaDetails() {\n  return this.bookForm.get('sadasyaDetails') as FormArray;\n}\n\naddNewSadasya() {\n  this.sadasyaDetails.push(this.formBuilder.group({ sadasyaName: '',sadasyaMoNumber : ''}));\n}\n\ndeleteSadasya(index) {\n  this.sadasyaDetails.removeAt(index);\n}\n\n/////////////////\n\n  onFormSubmit(form:NgForm) {\n    this.api.postBook(form)\n      .subscribe(res => {\n\n        // const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n        //   width: '250px',\n        //   data: {name: \"this.name\", animal: \"this.animal\"}\n        // });\n    \n        // dialogRef.afterClosed().subscribe(result => {\n        //   console.log('The dialog was closed');\n        //   this.router.navigate(['/shakha-mahiti']); \n        // });  \n        alert(\"Congratulations, data is added successfully...!\");\n        this.router.navigate(['/shakha-mahiti']);                  \n        }, (err) => {\n          console.log(err);\n        });\n  }\n}\n\n// export interface DialogData {\n//   animal: string;\n//   name: string;\n// }\n\n\n// @Component({\n//   selector: 'dialog-overview-example-dialog',\n//   templateUrl: 'dialog-overview-example-dialog.html',\n// })\n// export class DialogOverviewExampleDialog {\n\n//   constructor(\n//     public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n//     @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n//   onNoClick(): void {\n//     this.dialogRef.close();\n//   }\n\n// }\n","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n  overflow: auto;\\n}\\n\\n.isbn-col {\\n  flex: 0 0 100px !important;\\n  white-space: unset !important;\\n}\\n\\n.button-row {\\n  margin: 10px 0;\\n}\\n\\n.shakhabtn{\\n  margin-bottom: 10px;\\n  margin-right: 10px;\\n}\\n\"","module.exports = \"<div class=\\\"button-row\\\">\\n    <a mat-raised-button color=\\\"primary\\\" class=\\\"shakhabtn\\\" [routerLink]=\\\"['/add-shakha-mahiti']\\\">Add New Details</a>\\n</div>\\n\\n<form [formGroup]=\\\"csvForm\\\" class=\\\"form\\\" (ngSubmit)=\\\"onFormSubmit(csvForm.value)\\\">\\n  <h4> पूर्ण माहिती मिळवण्यासाठी कृपया टोकन टाका </h4>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"token\\\" formControlName=\\\"token\\\"\\n           [errorStateMatcher]=\\\"matcher\\\">\\n    <mat-error>\\n      <span *ngIf=\\\"!csvForm.get('token').valid && csvForm.get('token').touched\\\">कृपया हे भरा</span>\\n    </mat-error>\\n  </mat-form-field>\\n  <div class=\\\"button-row\\\">\\n    <button type=\\\"submit\\\" [disabled]=\\\"!csvForm.valid\\\" mat-raised-button color=\\\"primary\\\">Submit</button>\\n  </div>\\n  </form>\\n  <div class=\\\"button-row\\\">\\n    <button id =\\\"export\\\" type=\\\"button\\\" [disabled]=\\\"currentState !== '2'\\\" (click)=\\\"downloadCSV()\\\" mat-raised-button color=\\\"primary\\\">\\n      फाइल मध्ये घ्या</button>\\n  </div>\\n\\n<!-- <div id=\\\"dvData\\\" class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\"> -->\\n\\n    <!--- Note that these columns can be defined in any order.\\n          The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n    <!-- Title Column -->\\n    <!-- <ng-container matColumnDef=\\\"शाखा क़मांक\\\">\\n      <th mat-header-cell *matHeaderCellDef> शाखा क़मांक </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"isbn-col\\\"> {{element.isbn}} </td>\\n    </ng-container> -->\\n\\n    <!-- Title Column -->\\n    <!-- <ng-container matColumnDef=\\\"शाखा गाव\\\">\\n      <th mat-header-cell *matHeaderCellDef> शाखा गाव </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\n    </ng-container> -->\\n\\n    <!-- Author Column -->\\n    <!-- <ng-container matColumnDef=\\\"शाखा प्रमुख नाव\\\">\\n      <th mat-header-cell *matHeaderCellDef> शाखा प्रमुख नाव </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.author}} </td>\\n    </ng-container> -->\\n\\n    <!-- Title Column -->\\n    <!-- <ng-container matColumnDef=\\\"शाखा प्रमुख मोबाईल क़मांक\\\">\\n        <th mat-header-cell *matHeaderCellDef>शाखा प्रमुख मोबाईल क़मांक </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"isbn-col\\\"> {{element.isbn}} </td>\\n      </ng-container> -->\\n  \\n      <!-- Title Column -->\\n      <!-- <ng-container matColumnDef=\\\"companies\\\">\\n        <th mat-header-cell *matHeaderCellDef>बूथ</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> \\n            <div *ngFor=\\\"let booth of element.companies\\\">\\n               <label>बूथ नाव : {{booth.boothName}}</label><br>\\n               <label>बूथ मोबाईल क़मांक : {{booth.boothMoNumber}}</label><br>\\n                <label>बूथ क़मांक : {{booth.boothNumber}}</label>\\n            </div>          \\n        </td>\\n      </ng-container> -->\\n  \\n      <!-- Author Column -->\\n      <!-- <ng-container matColumnDef=\\\"sadasya\\\">\\n        <th mat-header-cell *matHeaderCellDef>सदस्य</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">  \\n           <div *ngFor=\\\"let sadasya of element.sadasya\\\">        \\n            <label>सदस्य नाव : {{sadasya.sadasyaName}}</label><br>\\n            <label>सदस्य मोबाईल क़मांक : {{sadasya.sadasyaMoNumber}}</label>\\n          </div> \\n        </td>\\n      </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [routerLink]=\\\"['/book-details/', row._id]\\\"></tr>\\n  </table>\\n</div> -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { DataSource } from '@angular/cdk/collections';\nimport {  FormGroup,FormBuilder,Validators,NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent implements OnInit {\n\n  csvForm: FormGroup;\n  token :string='';\n  currentState:string = '1';\n\n  books: any;\n  displayedColumns = ['शाखा क़मांक', 'शाखा गाव', 'शाखा प्रमुख नाव','शाखा प्रमुख मोबाईल क़मांक', 'companies','sadasya'];\n  dataSource = new BookDataSource(this.api);\n\n  constructor(private api: ApiService, private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.csvForm = this.formBuilder.group({\n      'token' : [null, Validators.required]         \n    })\n\n    this.api.getBooks()\n      .subscribe(res => {       \n        this.books = res;\n        this.books.forEach(book => {\n          console.log(book)\n        });\n      }, err => {\n        console.log(err);\n      });\n  }  \n\n  onFormSubmit(form:NgForm) {\n     var token = this.csvForm.get('token').value\n    if(token == 'shakha@123')\n    {\n      this.currentState = '2'\n    }else{\n      this.currentState = '1'\n    }    \n  }\n\n  ////////////////////////////////////////////////////////////////////////////\n\n  convertArrayOfObjectsToCSV(args) {\n    var result, ctr, keys, columnDelimiter, lineDelimiter, data, filteredKeys;\n\n    data = args.data || null;\n    if (data == null || !data.length) {\n        return null;\n    }\n\n    columnDelimiter = args.columnDelimiter || ',';\n    lineDelimiter = args.lineDelimiter || '\\n';\n\n    keys = Object.keys(data[0]);\n\n    filteredKeys = [keys[1],keys[2],keys[3],keys[4],keys[5],keys[6],keys[7]];\n\n    result = '';\n    result += filteredKeys.join(columnDelimiter);\n    result += lineDelimiter;\n\n    data.forEach(function(item,i) {\n        ctr = 0;\n        filteredKeys.forEach(function(key) {\n            if (ctr > 0) \n            result += columnDelimiter;               \n                \n              var parse_json =typeof item[key] === 'object'\n              \n              if(parse_json == true && key == 'boothDetails')\n              {\n               item[key].forEach(function(subItem){ \n                 console.log(\"index === > \",i)\n                  //result += \" बूथ नाव :  \" + subItem.boothName + \" \" + \" बूथ मोबाईल क़मांक : \" + subItem.boothMoNumber + \" बूथ क़मांक :  \" + subItem.boothNumber + \" \";\n                  result += \"बूथ नाव :\"+subItem.boothName;\n                  result += \"\\n,,,,,,\";\n                  result +=  \"बूथ मोबाईल क़मांक :\"+ subItem.boothMoNumber;\n                  result += \"\\n,,,,,,\";\n                  result += \"बूथ क़मांक :\"+subItem.boothNumber;                  \n                 });        \n         \n              }else if(parse_json == true && key == 'sadasyaDetails'){\n               item[key].forEach(function(subItem){\n                  result += \"सदस्य नाव :  \" + subItem.sadasyaName;\n                  result += \"\\n,,,,,,\";\n                  result += \"सदस्य मोबाईल क़मांक : \" + subItem.sadasyaMoNumber;\n                  result += \"\\n,,,,,,\";\n               });               \n              }else{\n                //Ignore record ids and updated time\n               if(key != \"_id\" || key != \"shakhaKramank\" || key != \"updated_date\" || key != \"__v\"  ) \n               {\n               result += item[key];\n               ctr++;\n              }\n            }           \n        });\n        result += lineDelimiter;\n    });\n    return result;    \n}\n\ndownloadCSV() {\n    var data, filename, link;\n\n    var csv = this.convertArrayOfObjectsToCSV({\n        data: this.books\n    });\n    if (csv == null) return;\n\n    filename = 'export.csv';\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = 'data:text/csv;charset=utf-8,' + csv;\n    }\n    data = encodeURI(csv);\n\n    link = document.createElement('a');\n    link.setAttribute('href', data);\n    link.setAttribute('download', filename);\n    link.click();\n  }\n}\n\nexport class BookDataSource extends DataSource<any> {\n  constructor(private api: ApiService) {\n    super()\n  }\n\n  connect() {\n    return this.api.getBooks();\n  }\n\n  disconnect() {\n\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}